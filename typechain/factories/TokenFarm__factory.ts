/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { TokenFarm, TokenFarmInterface } from "../TokenFarm";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_dappTokenAddress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
    ],
    name: "addAllowedTokens",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "allowedTokens",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "dappToken",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
    ],
    name: "getTokenValue",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
    ],
    name: "getUserSingleTokenValue",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
    ],
    name: "getUserTotalValue",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "issueTokens",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "address",
        name: "_priceFeed",
        type: "address",
      },
    ],
    name: "setPriceFeedContract",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
    ],
    name: "stakeTokens",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "stakers",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "stakingBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
    ],
    name: "tokenIsAllowed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "tokenPriceFeedMapping",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "uniqueTokensStaked",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
    ],
    name: "unstakeTokens",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040516200228338038062002283833981810160405281019062000037919062000182565b620000576200004b6200009f60201b60201c565b620000a760201b60201c565b80600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050620001fc565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6000815190506200017c81620001e2565b92915050565b6000602082840312156200019557600080fd5b6000620001a5848285016200016b565b91505092915050565b6000620001bb82620001c2565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b620001ed81620001ae565b8114620001f957600080fd5b50565b612077806200020c6000396000f3fe608060405234801561001057600080fd5b50600436106101165760003560e01c8063715018a6116100a2578063b83e023411610071578063b83e0234146102cb578063dd5b8467146102fb578063f1c5d6c21461032b578063f2fde38b1461035c578063fd5e6dd11461037857610116565b8063715018a614610257578063877dd39d146102615780638da5cb5b1461027d578063af3f5e221461029b57610116565b806329161a00116100e957806329161a00146101b35780632d1ad8b8146101e35780635e5f2e26146101ff5780635eb186f81461022f57806360ab58521461024d57610116565b80630bea440d1461011b578063171e44ea14610137578063276b11da1461015357806327927b3e14610183575b600080fd5b61013560048036038101906101309190611718565b6103a8565b005b610151600480360381019061014c9190611661565b610685565b005b61016d6004803603810190610168919061168a565b610767565b60405161017a9190611a73565b60405180910390f35b61019d60048036038101906101989190611661565b610872565b6040516101aa9190611902565b60405180910390f35b6101cd60048036038101906101c8919061168a565b6108a5565b6040516101da9190611a73565b60405180910390f35b6101fd60048036038101906101f89190611661565b6108ca565b005b610219600480360381019061021491906116ef565b610b31565b6040516102269190611902565b60405180910390f35b610237610b70565b6040516102449190611998565b60405180910390f35b610255610b96565b005b61025f610d60565b005b61027b6004803603810190610276919061168a565b610de8565b005b610285610ee6565b6040516102929190611902565b60405180910390f35b6102b560048036038101906102b09190611661565b610f0f565b6040516102c29190611a73565b60405180910390f35b6102e560048036038101906102e09190611661565b611040565b6040516102f29190611a73565b60405180910390f35b61031560048036038101906103109190611661565b611058565b604051610322919061197d565b60405180910390f35b61034560048036038101906103409190611661565b61112d565b604051610353929190611a8e565b60405180910390f35b61037660048036038101906103719190611661565b6112b3565b005b610392600480360381019061038d91906116ef565b6113ab565b60405161039f9190611902565b60405180910390f35b600082116103eb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103e2906119f3565b60405180910390fd5b6103f481611058565b610433576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161042a90611a33565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff1660e01b81526004016104709392919061191d565b602060405180830381600087803b15801561048a57600080fd5b505af115801561049e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104c291906116c6565b506104cd33826113ea565b81600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546105559190611ac8565b600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506001600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541415610681576004339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b5050565b61068d611502565b73ffffffffffffffffffffffffffffffffffffffff166106ab610ee6565b73ffffffffffffffffffffffffffffffffffffffff1614610701576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106f890611a13565b60405180910390fd5b6005819080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600080600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054116107b8576000905061086c565b6000806107c48461112d565b9150915080600a6107d59190611ba2565b82600160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461085d9190611cc0565b6108679190611b1e565b925050505b92915050565b60036020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6001602052816000526040600020602052806000526040600020600091509150505481565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490506000811161098e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161098590611a53565b60405180910390fd5b8173ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b81526004016109c9929190611954565b602060405180830381600087803b1580156109e357600080fd5b505af11580156109f7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a1b91906116c6565b506000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506001600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610aea9190611d1a565b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505050565b60058181548110610b4157600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610b9e611502565b73ffffffffffffffffffffffffffffffffffffffff16610bbc610ee6565b73ffffffffffffffffffffffffffffffffffffffff1614610c12576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c0990611a13565b60405180910390fd5b60005b600480549050811015610d5d57600060048281548110610c5e577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000610c9682610f0f565b9050600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb83836040518363ffffffff1660e01b8152600401610cf5929190611954565b602060405180830381600087803b158015610d0f57600080fd5b505af1158015610d23573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d4791906116c6565b5050508080610d5590611de7565b915050610c15565b50565b610d68611502565b73ffffffffffffffffffffffffffffffffffffffff16610d86610ee6565b73ffffffffffffffffffffffffffffffffffffffff1614610ddc576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610dd390611a13565b60405180910390fd5b610de6600061150a565b565b610df0611502565b73ffffffffffffffffffffffffffffffffffffffff16610e0e610ee6565b73ffffffffffffffffffffffffffffffffffffffff1614610e64576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e5b90611a13565b60405180910390fd5b80600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600080600090506000600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205411610f98576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f8f906119d3565b60405180910390fd5b60005b600580549050811015611036576110168460058381548110610fe6577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16610767565b826110219190611ac8565b9150808061102e90611de7565b915050610f9b565b5080915050919050565b60026020528060005260406000206000915090505481565b600080600090505b600580549050811015611122578273ffffffffffffffffffffffffffffffffffffffff16600582815481106110be577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141561110f576001915050611128565b808061111a90611de7565b915050611060565b50600090505b919050565b6000806000600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600081905060008173ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b1580156111e157600080fd5b505afa1580156111f5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112199190611754565b50505091505060008273ffffffffffffffffffffffffffffffffffffffff1663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b15801561126757600080fd5b505afa15801561127b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061129f91906117cb565b60ff16905081819550955050505050915091565b6112bb611502565b73ffffffffffffffffffffffffffffffffffffffff166112d9610ee6565b73ffffffffffffffffffffffffffffffffffffffff161461132f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161132690611a13565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561139f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611396906119b3565b60405180910390fd5b6113a88161150a565b50565b600481815481106113bb57600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054116114fe576001600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546114ba9190611ac8565b600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b5050565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6000813590506115dd81611fb7565b92915050565b6000815190506115f281611fce565b92915050565b60008151905061160781611fe5565b92915050565b60008135905061161c81611ffc565b92915050565b60008151905061163181611ffc565b92915050565b6000815190506116468161202a565b92915050565b60008151905061165b81612013565b92915050565b60006020828403121561167357600080fd5b6000611681848285016115ce565b91505092915050565b6000806040838503121561169d57600080fd5b60006116ab858286016115ce565b92505060206116bc858286016115ce565b9150509250929050565b6000602082840312156116d857600080fd5b60006116e6848285016115e3565b91505092915050565b60006020828403121561170157600080fd5b600061170f8482850161160d565b91505092915050565b6000806040838503121561172b57600080fd5b60006117398582860161160d565b925050602061174a858286016115ce565b9150509250929050565b600080600080600060a0868803121561176c57600080fd5b600061177a88828901611637565b955050602061178b888289016115f8565b945050604061179c88828901611622565b93505060606117ad88828901611622565b92505060806117be88828901611637565b9150509295509295909350565b6000602082840312156117dd57600080fd5b60006117eb8482850161164c565b91505092915050565b6117fd81611d4e565b82525050565b61180c81611d60565b82525050565b61181b81611dc3565b82525050565b600061182e602683611ab7565b915061183982611e9b565b604082019050919050565b6000611851601183611ab7565b915061185c82611eea565b602082019050919050565b6000611874601a83611ab7565b915061187f82611f13565b602082019050919050565b6000611897602083611ab7565b91506118a282611f3c565b602082019050919050565b60006118ba601d83611ab7565b91506118c582611f65565b602082019050919050565b60006118dd601b83611ab7565b91506118e882611f8e565b602082019050919050565b6118fc81611d96565b82525050565b600060208201905061191760008301846117f4565b92915050565b600060608201905061193260008301866117f4565b61193f60208301856117f4565b61194c60408301846118f3565b949350505050565b600060408201905061196960008301856117f4565b61197660208301846118f3565b9392505050565b60006020820190506119926000830184611803565b92915050565b60006020820190506119ad6000830184611812565b92915050565b600060208201905081810360008301526119cc81611821565b9050919050565b600060208201905081810360008301526119ec81611844565b9050919050565b60006020820190508181036000830152611a0c81611867565b9050919050565b60006020820190508181036000830152611a2c8161188a565b9050919050565b60006020820190508181036000830152611a4c816118ad565b9050919050565b60006020820190508181036000830152611a6c816118d0565b9050919050565b6000602082019050611a8860008301846118f3565b92915050565b6000604082019050611aa360008301856118f3565b611ab060208301846118f3565b9392505050565b600082825260208201905092915050565b6000611ad382611d96565b9150611ade83611d96565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115611b1357611b12611e30565b5b828201905092915050565b6000611b2982611d96565b9150611b3483611d96565b925082611b4457611b43611e5f565b5b828204905092915050565b6000808291508390505b6001851115611b9957808604811115611b7557611b74611e30565b5b6001851615611b845780820291505b8081029050611b9285611e8e565b9450611b59565b94509492505050565b6000611bad82611d96565b9150611bb883611d96565b9250611be57fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8484611bed565b905092915050565b600082611bfd5760019050611cb9565b81611c0b5760009050611cb9565b8160018114611c215760028114611c2b57611c5a565b6001915050611cb9565b60ff841115611c3d57611c3c611e30565b5b8360020a915084821115611c5457611c53611e30565b5b50611cb9565b5060208310610133831016604e8410600b8410161715611c8f5782820a905083811115611c8a57611c89611e30565b5b611cb9565b611c9c8484846001611b4f565b92509050818404811115611cb357611cb2611e30565b5b81810290505b9392505050565b6000611ccb82611d96565b9150611cd683611d96565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615611d0f57611d0e611e30565b5b828202905092915050565b6000611d2582611d96565b9150611d3083611d96565b925082821015611d4357611d42611e30565b5b828203905092915050565b6000611d5982611d76565b9050919050565b60008115159050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b600069ffffffffffffffffffff82169050919050565b6000611dce82611dd5565b9050919050565b6000611de082611d76565b9050919050565b6000611df282611d96565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415611e2557611e24611e30565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60008160011c9050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f4e6f20746f6b656e73207374616b656421000000000000000000000000000000600082015250565b7f416d6f756e74206d757374206265206d6f7265207468616e2030000000000000600082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b7f546f6b656e2069732063757272656e746c79206e6f20616c6c6f776564000000600082015250565b7f5374616b696e672062616c616e63652063616e6e6f7420626520300000000000600082015250565b611fc081611d4e565b8114611fcb57600080fd5b50565b611fd781611d60565b8114611fe257600080fd5b50565b611fee81611d6c565b8114611ff957600080fd5b50565b61200581611d96565b811461201057600080fd5b50565b61201c81611da0565b811461202757600080fd5b50565b61203381611dad565b811461203e57600080fd5b5056fea26469706673582212202c4e98b115f9512198141fbb26f3d212c2f00c4c4f38668da0dc4ac26ed83cf864736f6c63430008040033";

export class TokenFarm__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _dappTokenAddress: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<TokenFarm> {
    return super.deploy(
      _dappTokenAddress,
      overrides || {}
    ) as Promise<TokenFarm>;
  }
  getDeployTransaction(
    _dappTokenAddress: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_dappTokenAddress, overrides || {});
  }
  attach(address: string): TokenFarm {
    return super.attach(address) as TokenFarm;
  }
  connect(signer: Signer): TokenFarm__factory {
    return super.connect(signer) as TokenFarm__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TokenFarmInterface {
    return new utils.Interface(_abi) as TokenFarmInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TokenFarm {
    return new Contract(address, _abi, signerOrProvider) as TokenFarm;
  }
}
